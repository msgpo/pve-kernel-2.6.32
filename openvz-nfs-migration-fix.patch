

From: Stanislav Kinsbursky <skinsbursky@parallels.com>


---
 kernel/cpt/cpt_dump.c  |   24 ++++++++++++++++++++++++
 kernel/cpt/cpt_files.c |    8 ++++----
 kernel/cpt/rst_files.c |   10 ++++++++--
 3 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/kernel/cpt/cpt_dump.c b/kernel/cpt/cpt_dump.c
index 3334fc4..dac8a28 100644
--- a/kernel/cpt/cpt_dump.c
+++ b/kernel/cpt/cpt_dump.c
@@ -49,6 +49,7 @@
 #include "cpt_socket.h"
 #include "cpt_ubc.h"
 #include "cpt_kernel.h"
+#include "cpt_fsmagic.h"
 
 
 static int vps_child_level(struct task_struct *root, struct task_struct *c)
@@ -407,6 +408,27 @@ int cpt_resume(struct cpt_context *ctx)
 	return 0;
 }
 
+void cpt_drop_nfs_unhashed(struct cpt_context *ctx)
+{
+	cpt_object_t *obj;
+
+	for_each_object(obj, CPT_OBJ_FILE) {
+		struct file *file = obj->o_obj;
+		struct dentry *d = file->f_dentry;
+
+		if (IS_ROOT(d) || !d_unhashed(d))
+			continue;
+		if (d->d_sb->s_magic != FSMAGIC_NFS)
+			continue;
+
+		if (d->d_flags & DCACHE_NFSFS_RENAMED) {
+			spin_lock(&d->d_lock);
+			d->d_flags &= ~DCACHE_NFSFS_RENAMED;
+			spin_unlock(&d->d_lock);
+		}
+	}
+}
+
 int cpt_kill(struct cpt_context *ctx)
 {
 	int err = 0;
@@ -429,6 +451,8 @@ int cpt_kill(struct cpt_context *ctx)
 
 	cpt_kill_sockets(ctx);
 
+	cpt_drop_nfs_unhashed(ctx);
+
 	for_each_object(obj, CPT_OBJ_TASK) {
 		struct task_struct *tsk = obj->o_obj;
 
diff --git a/kernel/cpt/cpt_files.c b/kernel/cpt/cpt_files.c
index 82b3aad..d2dee7e 100644
--- a/kernel/cpt/cpt_files.c
+++ b/kernel/cpt/cpt_files.c
@@ -748,9 +748,6 @@ static int dump_one_file(cpt_object_t *obj, struct file *file, cpt_context_t *ct
 			obj->o_flags |= CPT_FILE_DELAYFS;
 
 		if (de->d_flags & DCACHE_NFSFS_RENAMED) {
-			spin_lock(&de->d_lock);
-			de->d_flags &= ~DCACHE_NFSFS_RENAMED;
-			spin_unlock(&de->d_lock);
 			v->cpt_lflags |= CPT_DENTRY_SILLYRENAME;
 			if (obj)
 				obj->o_flags |= CPT_FILE_SILLYRENAME;
@@ -763,8 +760,11 @@ static int dump_one_file(cpt_object_t *obj, struct file *file, cpt_context_t *ct
 		if (cpt_replaced(file->f_dentry, file->f_vfsmnt, ctx)) {
 			v->cpt_lflags |= CPT_DENTRY_REPLACED;
 			replaced = 1;
-		} else if (!(v->cpt_lflags & CPT_DENTRY_PROCPID_DEAD))
+		} else if (!(v->cpt_lflags & CPT_DENTRY_PROCPID_DEAD)) {
+			if (file->f_dentry->d_flags & DCACHE_NFSFS_RENAMED)
+				v->cpt_lflags |= CPT_DENTRY_SILLYRENAME;
 			v->cpt_lflags |= CPT_DENTRY_DELETED;
+		}
 	}
 	if (is_cloning_inode(file->f_dentry->d_inode))
 		v->cpt_lflags |= CPT_DENTRY_CLONING;
diff --git a/kernel/cpt/rst_files.c b/kernel/cpt/rst_files.c
index 0cfe181..a828455 100644
--- a/kernel/cpt/rst_files.c
+++ b/kernel/cpt/rst_files.c
@@ -881,7 +881,12 @@ try_again:
 			file = filp_open(name, flags, mode&017777);
 			sc_rmdir(name);
 		} else {
-			file = filp_open(name, O_CREAT|O_EXCL|flags, mode&017777);
+			unsigned int open_flags = flags | O_EXCL;
+
+			if (!(fi->cpt_lflags & CPT_DENTRY_SILLYRENAME))
+				open_flags |= O_CREAT;
+
+			file = filp_open(name, open_flags, mode&017777);
 			if (IS_ERR(file)) {
 				if (PTR_ERR(file) == -EEXIST)
 					continue;
@@ -1144,7 +1149,8 @@ struct file *rst_file(loff_t pos, int fd, struct cpt_context *ctx)
 					err = -EPERM;
 					goto err_out;
 				}
-				goto open_file;
+				if (!(fi.cpt_lflags & CPT_DENTRY_SILLYRENAME))
+					goto open_file;
 			}
 		}
 
