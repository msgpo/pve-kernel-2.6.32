From bf46c88fabc0787975c7ea202c9d82be4175a1fa Mon Sep 17 00:00:00 2001
From: Neil Horman <nhorman@redhat.com>
Date: Mon, 25 Jun 2012 09:41:26 -0400
Subject: [RHEL 6 PATCH] bonding: Always add vid to new slave group

If a bonded device has a vid added to it, we need to unilaterally add that vid
to the slaves now, otherwise we can't receive frames on that vid.  This happened
to work before because the slave shared a vlan group with the bond master, but
that is no longer the case.

Signed-off-by: Neil Horman <nhorman@redhat.com>
---
 drivers/net/bonding/bond_main.c |   55 +++++++++++++++++++--------------------
 1 files changed, 27 insertions(+), 28 deletions(-)

diff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c
index 23c21b5..53fb138 100644
--- a/drivers/net/bonding/bond_main.c
+++ b/drivers/net/bonding/bond_main.c
@@ -566,39 +566,38 @@ static void bond_vlan_rx_add_vid(struct net_device *bond_dev, uint16_t vid)
 		struct net_device *slave_dev = slave->dev;
 		const struct net_device_ops *slave_ops = slave_dev->netdev_ops;
 
-		if ((slave_dev->features & NETIF_F_HW_VLAN_FILTER) &&
-		    slave_ops->ndo_vlan_rx_add_vid) {
 
-			/* We only inform the hardware of vlan 0, don't store it in the group */
-			if (vid) {
-				sgrp = vlan_find_group(slave->dev);
-				if (!sgrp) {
-					pr_err(DRV_NAME ": %s: Could not find vlan group\n",
-						slave->dev->name);
-					continue;
-				}
-
-				/* Cant add the vid if we can't alloc storage for it */
-				if (vlan_group_prealloc_vid(sgrp, vid)) {
-					pr_err(DRV_NAME ": %s: Could not prealloc vid array\n",
-						slave->dev->name);
-					continue;
-				}
+		/* We only inform the hardware of vlan 0, don't store it in the group */
+		if (vid) {
+			sgrp = vlan_find_group(slave->dev);
+			if (!sgrp) {
+				pr_err(DRV_NAME ": %s: Could not find vlan group\n",
+					slave->dev->name);
+				continue;
+			}
 
-				/*
-				 * If the slave already has a vlan on that vid, don't overwrite it
-				 */
-				if (vlan_group_get_device(sgrp, vid)) {
-					pr_err(DRV_NAME ": %s: vid %d already exists on %s\n",
-						bond_dev->name, vid, slave_dev->name);
-					continue;
-				}
+			/* Cant add the vid if we can't alloc storage for it */
+			if (vlan_group_prealloc_vid(sgrp, vid)) {
+				pr_err(DRV_NAME ": %s: Could not prealloc vid array\n",
+					slave->dev->name);
+				continue;
+			}
 
-				vlan_group_set_device(sgrp, vid, vdev);
-				sgrp->nr_vlans++;
+			/*
+			 * If the slave already has a vlan on that vid, don't overwrite it
+			 */
+			if (vlan_group_get_device(sgrp, vid)) {
+				pr_err(DRV_NAME ": %s: vid %d already exists on %s\n",
+					bond_dev->name, vid, slave_dev->name);
+				continue;
 			}
-			slave_ops->ndo_vlan_rx_add_vid(slave_dev, vid);
+
+			vlan_group_set_device(sgrp, vid, vdev);
+			sgrp->nr_vlans++;
 		}
+		if ((slave_dev->features & NETIF_F_HW_VLAN_FILTER) &&
+		     slave_ops->ndo_vlan_rx_add_vid)
+			slave_ops->ndo_vlan_rx_add_vid(slave_dev, vid);
 	}
 
 	res = bond_add_vlan(bond, vid);
-- 
1.7.7.6

